---
# These steps apply to provisioning both Dev and Live servers
# _______________________________________________________________________________________

- name: Temporarily allow write access to sites/default
  file:
    path: "{{ drupal_core_path }}/sites/default"
    state: touch
    mode: ugo=rwx

- name: Allow write access to settings.php and services.yml
  file:
    path: "{{ item }}"
    state: touch
    mode: ugo=rw
  loop:
    - "{{ drupal_core_path }}/sites/default/services.yml"
    - "{{ drupal_core_path }}/sites/default/settings.php"

- name: Add settings overrides settings.php
  blockinfile:
    dest: "{{ drupal_core_path }}/sites/default/settings.php"
    block: |
          # ini_set('error_reporting', !E_NOTICE & !E_WARNING);

#  Add the block of settings overrides to the settings.php file that was created by `composer install`
- name: Add settings overrides to Live settings.php
  blockinfile:
    dest: "{{ drupal_core_path }}/sites/default/settings.php"
    block: |
          $databases['default']['default'] = [
            'database' => "{{ drupal_db_name }}",
            'username' => "{{ drupal_db_user }}",
            'password' => "{{ drupal_db_password }}",
            'host' => 'localhost',
            'port' => '3306',
            'driver' => 'mysql',
            'prefix' => '',
            'collation' => 'utf8mb4_general_ci',
            'init_commands' => ['isolation_level' => 'SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED',],
          ];
          $settings['hash_salt'] = "{{ drupal_hash_salt }}";
          $settings['update_free_access'] = FALSE;
          $settings['config_sync_directory'] = '../config/sync';
          $settings['file_public_path'] = 'sites/default/files';
          $settings['file_private_path'] = '../private_files';
          $settings['file_temp_path'] = '../tmp';
          $settings['trusted_host_patterns'] = [
            "^{{ drupal_domain_regex }}",
            "^.+\.{{ drupal_domain_regex }}",
          ];
          ini_set('error_reporting', !E_NOTICE & !E_WARNING); 

          # settings.local.php should not exist on Live Server
          if (file_exists($app_root . '/' . $site_path . '/settings.local.php')) {
            include $app_root . '/' . $site_path . '/settings.local.php';
          } 


# These steps apply to provisioning just the Dev server
# _______________________________________________________________________________________


# settings.local.php contains overrides to allow mailhog to operate with symfony mailer
- name: Copy settings.local file to sites/default/
  copy:
    src: "{{ config_dir }}/dev_settings/settings.local.php"
    dest: "{{ drupal_core_path }}/sites/default/settings.local.php"
  tags: ['test_only']


- name: Ensure development system can save SQL from both Live and Dev sources
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ drupal_deploy_dir }}/vm/saved_sql/live"
    - "{{ drupal_deploy_dir }}/vm/saved_sql/dev"
  tags: ['test_only']

# These steps apply to provisioning both Dev and Live servers
# _______________________________________________________________________________________

# Change services.yml to be have cookie_samesite: None on the Live system
# But if we do this on the test system, we will not be able to log in 
# as session cookies will not be sent via http (only via https)
- name: Change services to have cookie_samesite value None
  replace:  
    path:  "{{ drupal_core_path }}/sites/default/services.yml"
    regexp: '\bcookie_samesite:\s*Lax\b'
    replace: 'cookie_samesite: None'
  tags: ['prod_only']

# Really necessary on Live site. Can be inconvenient on Dev site
- name: Prevent write access to settings.php and services.yml
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
    mode: '0444'
  loop:
    - "{{ drupal_core_path }}/sites/default/services.yml"
    - "{{ drupal_core_path }}/sites/default/settings.php"
  tags: ['prod_only']

- name: Prevent write access to configuration directory
  ansible.builtin.file:
    path:  "{{ drupal_core_path }}/sites/default"
    state: directory
    mode: ugo=rx
  tags: ['prod_only']
