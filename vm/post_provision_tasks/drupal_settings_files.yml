---
# The following two steps are only used on the dev server
# to initialise the development environment
- name: Ensure Dev sql-dump target directory is present
  local_action:
    module: file
    path: "{{ config_dir }}/saved_sql/dev"
    state: directory
  become: no
  tags: ['test_only']

- name: Ensure Live sql-dump target directory is present
  local_action:
    module: file
    path: "{{ config_dir }}/saved_sql/live"
    state: directory
  become: no
  tags: ['test_only']

 # We write in our remembered site settings files
- name: Temporarily allow write access to sites/default
  file:
    path: "{{ drupal_core_path }}/sites/default"
    state: directory
    mode: ugo=rwx
  become: yes
  tags: ['test_only']

# - name: Temporarily allow write access to sensitive sites files
#   file:
#     path: "{{ item }}"
#     state: file
#     mode: ugo=rw
#   loop:
#     - "{{ drupal_core_path }}/sites/default/services.yml"
#     - "{{ drupal_core_path }}/sites/default/settings.local.yml"
#   become: yes
#   tags: ['test_only']

- name: Allow write access to settings.php
  file:
    path: "{{ drupal_core_path }}/sites/default/settings.php"
    state: touch
    mode: ugo=rw

- name: Template Drupal settings file to sites/default/
  template:
    src: "{{ config_dir }}/saved_default_settings/settings.php.j2"
    dest: "{{ drupal_core_path }}/sites/default/settings.php"
  become: no

- name: Harden settings.php
  file:
    path: "{{ drupal_core_path }}/sites/default/settings.php"
    state: file
    mode: u=r,g=r,o-rwx
  become: yes
  tags: ['drupal', 'prod_only']

- name: Harden access to sites/default
  file:
    path: "{{ drupal_core_path }}/sites/default"
    state: directory
    mode: ugo=rx
  become: yes
  tags: ['drupal', 'prod_only']

- name: Copy Development services file to sites/
  copy:
    src: "{{ config_dir }}/saved_default_settings/development.services.yml"
    dest: "{{ drupal_core_path }}/sites/development.services.yml"
  tags: ['test_only']

- name: Configure Dev Settings in sites/default
  blockinfile:
    dest: "{{ drupal_core_path }}/sites/default/settings.php"
    block: |
          # mailhog needs the mailsystem to use default PHP sender
          $config['mailsystem.settings']['defaults']['sender'] = 'php_mail';
          # settings.local.php disables CSS aggregation and disables Internal Page Cache etc.
          if (file_exists($app_root . '/' . $site_path . '/settings.local.php')) {
            include $app_root . '/' . $site_path . '/settings.local.php';
           }
          # ini_set('error_reporting', !E_NOTICE & !E_WARNING);
  tags: ['test_only']

- name: Copy services file to sites/default/
  copy:
    src: "{{ config_dir }}/saved_default_settings/services.yml"
    dest: "{{ drupal_core_path }}/sites/default/services.yml"
  tags: ['test_only']

- name: Copy settings.local file to sites/default/
  copy:
    src: "{{ config_dir }}/saved_default_settings/settings.local.php"
    dest: "{{ drupal_core_path }}/sites/default/settings.local.php"
  tags: ['test_only']

- name: Create a new database with "drupal_db_name"
  mysql_db:
    name: "{{ drupal_db_name }}"
    login_password: "{{mysql_root_password}}"
    login_user: root
    state: present
  tags: ['test_only']

- name: Create database user with password and all database privileges and 'WITH GRANT OPTION'
  mysql_user:
    name: "{{drupal_db_user}}"
    password: "{{drupal_db_password}}"
    priv: '*.*:ALL,GRANT'
    state: present
  tags: ['test_only']
