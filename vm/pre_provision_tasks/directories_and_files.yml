---
# Note that dest: "{{ drupal_core_path }}/.." is also "{{ drupal_deploy_dir}}"
# since {{ drupal_core_path }} is {{ drupal_deploy_dir}}/web
# - name: Ensure Drupal deploy directory can be created by git and accessible to http server
#   file:
#     path: "{{ drupal_deploy_dir }}/.."
#     state: directory
#     mode: ug+w
#     owner: "{{ drupalvm_user }}"
#     group: "{{ drupalvm_user }}"
#   tags: ['drupal', 'prod_only']
#   become: yes

# on the dev system we are working in the directory that already has the repo as we like it
# we don't want to overwrite any git changes we've made on the dev sysytem
# but we do want to populate the live system with latest code pushed to the repo
# - name: Create and populate Drupal deploy directory
#   git:
#     repo: 'https://github.com/iainhouston/bradford-abbas.uk.git'
#     dest: "{{ drupal_deploy_dir }}"
#   tags: ['drupal', 'prod_only']
#   become: no

- name: Clone only specific files using sparse checkout
  hosts: localhost
  tasks:
    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ drupal_deploy_dir }}"
        state: directory
        mode: '0755'

    - name: Initialize an empty Git repository
      command: git init
      args:
        chdir: "{{ drupal_deploy_dir }}"

    - name: Add remote repository
      command: git remote add origin https://github.com/iainhouston/bradford-abbas.uk.git
      args:
        chdir: "{{ drupal_deploy_dir }}"
      ignore_errors: yes  # Ignore errors if remote already exists

    - name: Enable sparse checkout
      command: git config core.sparseCheckout true
      args:
        chdir: "{{ drupal_deploy_dir }}"

    - name: Define the sparse checkout paths
      ansible.builtin.copy:
        dest: "{{ drupal_deploy_dir }}/.git/info/sparse-checkout"
        content: |
          config/
          composer.json
          composer.lock

    - name: Pull only the specified files
      command: git pull --depth=1 origin main
      args:
        chdir: "{{ drupal_deploy_dir }}"

# Optimise below?
- name: Ensure prodn directories are writable by http server
  file:
    path: "{{ item }}"
    recurse: yes
    state: directory
    mode: ug+w
    owner: "{{ drupalvm_user }}"
    group: "{{ drupalvm_user }}"
  loop:
    - "{{ drupal_deploy_dir }}"
    - "{{ drupal_deploy_dir }}/private_files"
    - "{{ drupal_deploy_dir }}/tmp"
    - "{{ drupal_deploy_dir }}/config"
    - "{{ drupal_core_path }}/sites/default"
  tags: ['drupal', 'prod_only']
  become: yes

- name: Ensure Dev directories are writable by http server
  file:
    path: "{{ item }}"
    recurse: yes
    state: directory
    mode: ug+w
    owner: "{{ guest_files_owner }}"
    group: "{{ guest_files_group }}"
  loop:
    - "{{ drupal_deploy_dir }}"
    - "{{ drupal_deploy_dir }}/private_files"
    - "{{ drupal_deploy_dir }}/tmp"
    - "{{ drupal_deploy_dir }}/config"
    - "{{ drupal_core_path }}/sites/default"
  tags: ['test_only']
  become: yes
