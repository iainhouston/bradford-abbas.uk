---
# Note that dest: "{{ drupal_core_path }}/.." is also "{{ drupal_deploy_dir}}"
# since {{ drupal_core_path }} is {{ drupal_deploy_dir}}/web

# on the dev system we are working in the directory that already has the repo as we like it
# we don't want to overwrite any git changes we've made on the dev sysytem
# but we do want to populate the live system with latest code pushed to the repo

- name: Ensure  Drupal deploy directory can be created by git and accessible to http server
  file:
    path: "{{ drupal_deploy_dir }}/.."
    state: directory
    mode: ug+w
    owner: "{{ guest_files_owner }}"
    group: "{{ guest_files_group }}"
  become: yes

- name: Ensure Git allows the repo directory
  command: git config --global --add safe.directory "{{ drupal_deploy_dir }}"
  args:
    chdir: "{{ drupal_deploy_dir }}"
  become: no
  

- name: Initialize an empty Git repository
  command: git init
  args:
    chdir: "{{ drupal_deploy_dir }}"
  become: no

- name: Add remote repository
  command: git remote add origin https://github.com/iainhouston/bradford-abbas.uk.git
  args:
    chdir: "{{ drupal_deploy_dir }}"
  ignore_errors: yes  # Ignore errors if remote already exists
  become: no

- name: Enable sparse checkout
  command: git config core.sparseCheckout true
  args:
    chdir: "{{ drupal_deploy_dir }}"
  become: no

- name: Define the sparse checkout paths
  ansible.builtin.copy:
    dest: "{{ drupal_deploy_dir }}/.git/info/sparse-checkout"
    content: |
      config/
      composer.json
      composer.lock
  become: no

# DEBUG: This is a test to see if the git pull works. Change from newscaffold to master
# With --depth=1, Git downloads only the latest commit and avoids fetching older history.
- name: Pull only the specified files
  command: git pull --depth=1 origin newscaffold
  args:
    chdir: "{{ drupal_deploy_dir }}"
  become: no

# - name: Create and populate Drupal deploy directory
#   git:
#     repo: 'https://github.com/iainhouston/bradford-abbas.uk.git'
#     dest: "{{ drupal_deploy_dir }}"
#   # tags: ['drupal', 'prod_only']
#   become: no
#   tags: ['drupal', 'prod_only'] # Dev already has cloned the rep. DONT OVERWRITE!

- name: Ensure Dev directories are writable by http server
  file:
    path: "{{ item }}"
    recurse: yes
    state: directory
    mode: ug+w
    owner: "{{ guest_files_owner }}"
    group: "{{ guest_files_group }}"
  loop:
    - "{{ drupal_deploy_dir }}"
    - "{{ drupal_deploy_dir }}/private_files"
    - "{{ drupal_deploy_dir }}/tmp"
    - "{{ drupal_deploy_dir }}/config"
    - "{{ drupal_core_path }}/sites/default"
  become: no
